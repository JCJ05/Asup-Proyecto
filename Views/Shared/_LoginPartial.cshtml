@using Microsoft.AspNetCore.Identity
@using System.Threading.Tasks
@inject SignInManager<Usuario> SignInManager
@inject UserManager<Usuario> UserManager

<ul class="navbar-nav">

    
    

@if (SignInManager.IsSignedIn(User))
{

    Usuario myidentity = await Task.Run(() => UserManager.GetUserAsync(User));
    var roles = await Task.Run(() => UserManager.GetRolesAsync(myidentity));

    @if(roles.Contains("administrador")){

         <li class="nav-item">
            <a class="nav-link color"  asp-controller="Pago" asp-action="Pendientes">Pagos pendientes</a>
        </li> 

        <li class="nav-item">
            <a class="nav-link color" asp-controller="Inscripciones" asp-action="verCursos">Inscripciones</a>
        </li>
    
    }else {

        <li class="nav-item">
            <a class="nav-link color"  asp-controller="Pago" asp-action="MisPedidosPendientes">Pedidos Pendientes</a>
        </li> 
        <li class="nav-item">
            <a class="nav-link color"  asp-controller="Pago" asp-action="MisPedidos">Mis pedidos</a>
        </li> 

        <li class="nav-item">
            <a class="nav-link color"  asp-controller="Curso" asp-action="MisCursos">Mis cursos</a>
        </li>
    }


    <li class="nav-item">
        <a  class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage"> @User.Identity.Name!</a>
    </li>
    <li class="nav-item">
        <form  class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
            <button  type="submit" class="nav-link btn btn-link text-dark">Cerrar Sesion</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
                  <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Registrar Usuario</a>
              </li>

              <li class="nav-item">
                    <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Iniciar Sesion</a>
              </li>
}
</ul>
